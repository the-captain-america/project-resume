/* styles for mixins */
// rem fallback - credits: http://zerosixthree.se/
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

// font sizing
@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;
}

@mixin transition($transition...) {
  -moz-transition:    $transition;
  -o-transition:      $transition;
  -webkit-transition: $transition;
  transition:         $transition;
}

// Create mixin for easy vendor prefix
@mixin transition-time($time) {
  transition:           all $time ease-in-out;
  -webkit-transition:   all $time ease-in-out;
  -moz-transition:      all $time ease-in-out;
  -o-transition:        all $time ease-in-out;
  -ms-transition:       all $time ease-in-out;
}


@mixin transition-delay ($time) {
  -webkit-transition-delay: $time;
  -moz-transition-delay: $time;
  -o-transition-delay: $time;
  -ms-transition-delay: $time;
  transition-delay: $time;
}

@mixin rotate ($deg){
  transform: rotate($deg);
  -webkit-transform: rotate($deg);
  -moz-transform: rotate($deg);
  -o-transform: rotate($deg);
  -ms-transform: rotate($deg);
}

@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// box sizing
@mixin box-sizing( $type: border-box ) {
    -webkit-box-sizing: $type;
       -moz-box-sizing: $type;
         -o-box-sizing: $type;
        -ms-box-sizing: $type;
            box-sizing: $type;
}

@mixin animation ($delay, $duration, $animation) {
    -webkit-animation-delay: $delay;
    -webkit-animation-duration: $duration;
    -webkit-animation-name: $animation;
    -webkit-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    -moz-animation-delay: $delay;
    -moz-animation-duration: $duration;
    -moz-animation-name: $animation;
    -moz-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    -o-animation-delay: $delay;
    -o-animation-duration: $duration;
    -o-animation-name: $animation;
    -o-animation-fill-mode: forwards; /* this prevents the animation from restarting! */

    animation-delay: $delay;
    animation-duration: $duration;
    animation-name: $animation;
    animation-fill-mode: forwards; /* this prevents the animation from restarting! */
}

@mixin keyframe ($animation_name) {
    @-webkit-keyframes $animation_name {
        @content;
    }

    @-moz-keyframes $animation_name {
        @content;
    }

    @-o-keyframes $animation_name {
        @content;
    }

    @keyframes $animation_name {
        @content;
    }
}

// breakpoints

$XS:     320px;
$S:     480px;
$M:     768px;
$L:     1170px;

// media queries

@mixin MQ($canvas) {
  @if $canvas == XS {
   @media only screen and (min-width: $XS) { @content; }
  }
  @if $canvas == S {
   @media only screen and (min-width: $S) { @content; }
  }
  @else if $canvas == M {
   @media only screen and (min-width: $M) { @content; }
  }
  @else if $canvas == L {
   @media only screen and (min-width: $L) { @content; }
  }
}

// how to use?
// @include MQ(XS) {
//   font-size: 75%;
// }
